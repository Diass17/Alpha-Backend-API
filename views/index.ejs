<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Alpha Education Platform</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            height: 100vh;
        }

        .sidebar {
            width: 250px;
            background-color: #2c3e50;
            color: white;
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        .sidebar h2 {
            color: #ecf0f1;
        }

        .sidebar button {
            margin: 10px 0;
            padding: 10px;
            border: none;
            background-color: #34495e;
            color: white;
            cursor: pointer;
        }

        .sidebar button:hover {
            background-color: #1abc9c;
        }

        .main {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .section {
            display: none;
        }

        .active {
            display: block;
        }

        .search-filter {
            margin-bottom: 20px;
        }

        .search-filter input,
        .search-filter select {
            margin-right: 10px;
            padding: 5px;
        }

        table,
        th,
        td {
            border: 1px solid #ccc;
            border-collapse: collapse;
            padding: 8px;
        }

        table {
            width: 100%;
        }
    </style>
</head>

<body>
    <div class="sidebar">
        <h2>Навигация</h2>
        <button onclick="showSection('management')">Управление</button>
        <button onclick="showSection('finance')">Финансовый модуль</button>
        <button onclick="showSection('admin')">Админ студентов</button>
    </div>
    <div class="main">
        <div id="management" class="section active">
            <div style="display: flex; justify-content: space-between; align-items: center;">
                <h1>Управление студентами</h1>
                <form method="GET" action="/logout">
                    <button type="submit" class="auth-button">Выйти</button>
                </form>
            </div>

            <div class="search-filter">
                <input type="text" id="studentSearch" placeholder="Поиск по имени" />
                <select id="studentFilter">
                    <option value="">Все</option>
                    <option value="student">Student</option>
                    <option value="graduate">Graduate</option>
                </select>
                <button onclick="loadStudentList()">Поиск</button>
                <button onclick="showAddStudentForm()">Добавить студента</button>
            </div>

            <div id="studentTableContainer"></div>

            <div id="addStudentFormContainer" style="display: none">
            </div>
        </div>
        <div id="finance" class="section">
            <h1>Финансовый модуль</h1>
            <div class="search-filter">
                <input id="streamSearch" type="text" placeholder="Введите ID потока">
                <button id="searchButton">Поиск</button>
                <button onclick="addStream()">Добавить поток</button>
                <button onclick="editStream()">Редактировать поток</button>
            </div>
            <div id="streamStudentTableContainer">
                <h3>Статистика потоков</h3>
            </div>
        </div>

        <div id="admin" class="section">
            <h1>Админ студентов</h1>
            <div class="search-filter">
                <input type="text" placeholder="Поиск по ФИО или Email" />
                <button>Поиск</button>
            </div>
            <div>
                <h3>Финансовый обзор</h3>
                <h3>Оплаты студентов</h3>
                <h3>Отчеты по финансированию</h3>
            </div>
        </div>
    </div>

    <script>
        function showSection(id) {
            document.querySelectorAll('.section').forEach(s => s.classList.remove('active'));
            document.getElementById(id).classList.add('active');
        }

        function showAddStudentForm() {
            const container = document.getElementById('addStudentFormContainer');
            container.innerHTML = `
        <h3>Добавить студента</h3>
        <form onsubmit="submitStudent(event)">
          <input type="text" id="fullName" placeholder="Full Name" required /><br/>
          <input type="text" id="iin" placeholder="IIN" required /><br/>
          <input type="email" id="email" placeholder="Email" required /><br/>
          <input type="text" id="phone" placeholder="Phone" /><br/>
          <label><input type="checkbox" id="whatsapp" /> WhatsApp</label>
          <label><input type="checkbox" id="telegram" /> Telegram</label><br/>
          <select id="status" required>
            <option value="student">Student</option>
            <option value="graduate">Graduate</option>
          </select><br/>
          <label><input type="checkbox" id="topStudent" /> Top Student</label><br/>
          <select id="fundingSource" required>
            <option value="full">Full</option>
            <option value="TechOrda">TechOrda</option>
            <option value="discount">Discount</option>
          </select><br/>
          <input type="number" id="amountPaid" placeholder="Amount Paid" required /><br/>
          <input type="number" id="amountRemaining" placeholder="Amount Remaining" required /><br/>
          <input type="number" id="streamId" placeholder="Stream ID" required /><br/>
          <button type="submit">Сохранить</button>
        </form>
      `;
            container.style.display = 'block';
        }

        async function submitStudent(event) {
            event.preventDefault();
            const studentData = {
                fullName: document.getElementById('fullName').value,
                iin: document.getElementById('iin').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
                whatsapp: document.getElementById('whatsapp').checked,
                telegram: document.getElementById('telegram').checked,
                status: document.getElementById('status').value,
                topStudent: document.getElementById('topStudent').checked,
                fundingSource: document.getElementById('fundingSource').value,
                amountPaid: Number(document.getElementById('amountPaid').value),
                amountRemaining: Number(document.getElementById('amountRemaining').value),
                streamId: Number(document.getElementById('streamId').value)
            };

            try {
                const response = await fetch('/api/students/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(studentData)
                });

                const result = await response.json();
                if (response.ok) {
                    alert('Студент добавлен!');
                    document.getElementById('addStudentFormContainer').style.display = 'none';
                    loadStudentList();
                } else {
                    alert('Ошибка: ' + result.error);
                }
            } catch (error) {
                alert('Ошибка отправки данных.');
            }
        }

        document.getElementById('searchButton').addEventListener('click', loadStudentsByStream);


        async function loadStudentsByStream() {
            const currentSection = document.querySelector('#finance');
            if (!currentSection.classList.contains('active')) {
                return;
            }

            const streamId = document.getElementById('streamSearch').value.trim();
            const container = document.getElementById('streamStudentTableContainer');
            container.innerHTML = 'Загрузка студентов по потоку...';

            if (!streamId) {
                container.innerHTML = '<p>Введите ID потока для поиска.</p>';
                return;
            }

            try {
                const response = await fetch(`/api/students?streamId=${encodeURIComponent(streamId)}`);
                if (!response.ok) {
                    throw new Error(`Ошибка сервера: ${response.statusText}`);
                }

                const students = await response.json();
                if (students.length === 0) {
                    container.innerHTML = '<p>Студенты не найдены по этому потоку.</p>';
                    return;
                }

                let html = `<table>
        <thead>
          <tr>
            <th>ФИО</th>
            <th>IIN</th>
            <th>Email</th>
            <th>Телефон</th>
            <th>WhatsApp</th>
            <th>Telegram</th>
            <th>Статус</th>
            <th>Топ студент</th>
            <th>Источник финансирования</th>
            <th>Оплачено</th>
            <th>Остаток</th>
            <th>Поток</th>
          </tr>
        </thead>
        <tbody>`;

                for (const s of students) {
                    html += `<tr onclick="window.location.href = '/api/students/update-student?id=${s.id}'" style="cursor:pointer;">
        <td>${s.full_name}</td>
        <td>${s.iin}</td>
        <td>${s.email}</td>
        <td>${s.phone}</td>
        <td>${s.whatsapp ? 'Да' : 'Нет'}</td>
        <td>${s.telegram ? 'Да' : 'Нет'}</td>
        <td>${s.status}</td>
        <td>${s.top_student ? 'Да' : 'Нет'}</td>
        <td>${s.funding_source}</td>
        <td>${s.amount_paid}</td>
        <td>${s.amount_remaining}</td>
        <td>${s.stream_id}</td>
    </tr>`;
                }


                html += '</tbody></table>';
                container.innerHTML = html;

            } catch (error) {
                container.innerHTML = `<p style="color:red;">Ошибка загрузки студентов: ${error.message}</p>`;
                console.error(error);
            }
        }


        async function loadStudentList() {
            const name = document.getElementById('studentSearch').value.trim();
            const status = document.getElementById('studentFilter').value;

            let url = '/api/students?';
            if (name) url += `name=${encodeURIComponent(name)}&`;
            if (status) url += `status=${encodeURIComponent(status)}`;

            const container = document.getElementById('studentTableContainer');
            container.innerHTML = 'Загрузка списка студентов...';

            try {
                const response = await fetch(url);
                if (!response.ok) throw new Error('Ошибка при загрузке данных');

                const students = await response.json();

                if (students.length === 0) {
                    container.innerHTML = '<p>Студенты не найдены.</p>';
                    return;
                }

                let html = `<table>
          <thead>
            <tr>
              <th>ФИО</th>
              <th>IIN</th>
              <th>Email</th>
              <th>Статус</th>
              <th>Оплачено</th>
              <th>Остаток</th>
            </tr>
          </thead>
          <tbody>`;

                for (const s of students) {
                    html += `<tr onclick="window.location.href = '/api/students/update-student?id=${s.id}'" style="cursor:pointer;">
        <td>${s.full_name}</td>
        <td>${s.iin}</td>
        <td>${s.email}</td>
        <td>${s.status}</td>
        <td>${s.amount_paid}</td>
        <td>${s.amount_remaining}</td>
    </tr>`;
                }


                html += '</tbody></table>';
                container.innerHTML = html;

            } catch (error) {
                container.innerHTML = `<p style="color:red;">Ошибка загрузки студентов: ${error.message}</p>`;
            }
        }

        loadStudentList();
    </script>
</body>

</html>